exit
Chronic.parse("monday #{new_time}")
new_time
exit
new_date=Chronic.parse("friday #{new_time}")
next_chore_day = day_array.filter{|day|day>current_day}[0]? day_array.filter{|day|day>current_day}[0] : day_array[0]
day_array = ((repeat_chore.repeat_every).map{|day| day.to_i}).sort
current_day = time.wday
chore.due_date.time
chore.due_date
exit
chore
chore.due_date.time
chore.due_date
new_date=Chronic.parse("monday #{new_time}")
 next_chore_day = day_array.filter{|day|day>current_day}[0]? day_array.filter{|day|day>current_day}[0] : day_array[0]
day_array=[7,2]
 next_chore_day = day_array.filter{|day|day>current_day}[0]? day_array.filter{|day|day>current_day}[0] : day_array[0]
day_array=[1,2]
 next_chore_day = day_array.filter{|day|day>current_day}[0]? day_array.filter{|day|day>current_day}[0] : day_array[0]
day_array=[1,3,5]
 next_chore_day = day_array.filter{|day|day>current_day}[0]? day_array.filter{|day|day>current_day}[0] : day_array[0]
day_array=[1]
!repeat_chore.repeat_every.include?("once")
day_aray.filter{|day|day>current_day}
day_array.filter{|day|day>current_day}
day.array.filter{|day|day>current_day}
current_day=time.wday
current_day
day_aray = ((repeat_chore.repeat_every).map{|day| day.to_i}).sort
array.sort
array=[4,2,6,3,6]
repeat.sort
repeat=repeat.map{|day|day.to_i}
repeat=repeat.map{|day|day.to_i|}
repeat
repeat.map{|day|day.to_i}
repeat.to_i
repeat=repeat_chore.repeat_every
3.day
3.wday
time.wday
current_day
repeat_chore.repeat_every
exit
repeat_chore.repeat_every
repeat_chore.repeat_ever
time.wday
time
exit
Chronic.parse("tomorrow #{new_time}")
Chronic.parse("tomorrow 20:00:00")
Chronic.parse(`tomorrow 20:00:00`)
Chronic.parse(`tomorrow #{new_time}`)
new_time = chore.due_date.time.strftime("%H:%M:%S")
chore.due_date.time.strftime("%H:%M:%S")
chore.due_date.time
chore.due_date
time.strftime("%H:%M")
time.strptime("%H:%M")
time.strptime(%H:%M)
time.hour
time.hourminute
time.minute
time.minutes
time.hour.minute
time.wday
time.hour
time = chore.due_date.time
chore.due_date.time.to_time
time.strptime
time=chore.due_date.time.strftime("%H:%M")
chore.due_date.time.strftime("%H:%M")
chore.due_date.time
chore.due_date.time.slice(12,8)
chore.due_date.time
Chronic.parse('tomorrow')
chore.due_date
time
exit
time
Time.now
Date.strptime
Time.parse
Date.parse
time.parse
time = chore.due_date.strftime("%Y-%d-%m %H:%M:%S %Z")
time = chore.due_date.strptime("%Y-%d-%m %H:%M:%S %Z")
chore.due_date.strptime("%Y-%d-%m %H:%M:%S %Z")
chore.due_date.parsetime(%Y-%d-%m %H:%M:%S %Z)
chore.due_date.strftime(%Y-%d-%m %H:%M:%S %Z)
chore.due_date.strftime("%Y-%d-%m %H:%M:%S %Z")
Time.now
Time.now.strftime("%Y-%d-%m %H:%M:%S %Z")
chore.due_date
chore.due_Date
Chronic.parse('next month')
array.include?(repeat_chore.repeat_every[0])
array=["once","day","week","month"]
repeat_chore.repeat_every
repeat_chore.participants
repeat_chore
params[:participants]
time
exit
params[:participants]
exit
admin.id
admin = User.where("admin=? and group_name=?",true,"Rosen")[0]
admin.id
admin
exit
quit
user.id
admin.id
admin.prizes
user=User.find(72)
admin = User.where("admin=? and group_name=?",true,"Rosen")
admin.id
user
admin
user
user.prizes
user
admin.chores
admin.prizes
admin
admin.prizes
new_prize
q
exit
repeat.repeat_every.split(" ")
repeat.repeat_every.split("")
repeat.repeaty_every.split("")
repeat.repeat_every.split
repeat
