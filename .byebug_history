continue
 Chronic.parse("a month from now", now:time).to_s.slice(0,10)+"T"+new_time
 Chronic.parse("a moneth from now", now:time).to_s.slice(0,10)+"T"+new_time
 Chronic.parse("a week from now", now:time).to_s.slice(0,10)+"T"+new_time
Chronic.parse("next week", now:time).to_s.slice(0,10)+"T"+new_time
time = chore.due_date
Chronic.parse("next week", now:time).to_s.slice(0,10)+"T"+new_time
Chronic.parse("next week}", now:time).to_s.slice(0,10)+"T"+new_time
time=chore.due_date.strftime("%Y-%m-%dT%T UTC")
 time = chore.due_date
Chronic.parse("next week}", now:time).to_s.slice(0,10)+"T"+new_time
time.slice(5,2)
time=chore.due_date.strftime("%Y-%m-%dT%T UTC")
chore.due_date
 Chronic.parse("next #{repeat_chore.repeat_every[0]}", now:"October 15").to_s.slice(0,10)+"T"+new_time
 Chronic.parse("next #{repeat_chore.repeat_every[0]}", now:October 15).to_s.slice(0,10)+"T"+new_time
Chronic.parse("a month from #{time}")
time=time.strftime("%Y-%m-%dT%T UTC")
time=chore.due_date
Chronic.parse("a month from #{time}")
 Chronic.parse("next #{repeat_chore.repeat_every[0]}", now:time).to_s.slice(0,10)+"T"+new_time
time=time.to_datetime
time.to_datetime
Datetime(time)
DateTime(time)
 Chronic.parse("next #{repeat_chore.repeat_every[0]}", now:time).to_s.slice(0,10)+"T"+new_time
time=chore.due_date.strftime("%Y-%m-%dT%T UTC")
time=chore.repeat_every.strftime("%Y-%m-%dT%T UTC")
time=time.strftime("%Y-%m-%dT%T UTC")
 Chronic.parse("next #{repeat_chore.repeat_every[0]}", now:time).to_s.slice(0,10)+"T"+new_time
time=time.strftime("%Y-%m-%dT%T %z")
time.strftime("%Y-%m-%dT%T %z")
DateTime.new(chore.due_date)
DateTime.new(time)
 time = strftime(chore.due_date)
repeat_chore.repeat_every[0]
Chronic.parse("next #{repeat_chore.repeat_every[0]}", now:time).to_s.slice(0,10)+"T"+new_time
new_time = repeat_chore.due_date.to_s().slice(11,19)
time
continue
array[1]
array[0]
 array.map{|repeat_chore|{**repeat_chore,image:repeat_chore.image}}
array
continue
array
continue
array
continue
User.new(user_params)
user_params
new_admin = User.new(user_params)
continue
chore.save!
chore.save
chore.save!
chore
continue
RepeatChore.first.image
continue
RepeatChore.all.pluck(:participants)
RepeatChore.all.pluck(:id)
RepeatChore.all
object.id
object.repeat_chores
object
continue
exit
RepeatChore.find(chore.repeat_chore.id)
Chronic.parse("tomorrow").to_s().slice(0,10)+"T"+chore.repeat_chore.due_date.to_s().slice(11,19)
Chronic.parse("tomorrow").to_s().slice(0,10)
Chronic.parse("tomorrow").time.to_s()
Chronic.parse("tomorrow").to_s()
Chronic.parse("tomorrow")
Chronic.parse("tomorrow").time.to_s
Chronic.parse("tomorrow").time
chore.due_date.to_s().slice(11,15)
chore.due_date.to_s().slice(11,18)
chore.due_date.to_s().slice(11,20)
chore.due_date.to_s()
chore.due_date
chore.due_date.time.strftime("%H:%M:%S %Z")
chore.due_date.time.strftime("%H:%M:%S")
chore.repeat_chore.due_date
chore.repeat_chore
chore
continue
date.time
date = Chronic.parse("tomorrow").time.to_s.slice(0,10)+"T"+time
Chronic.parse("tomorrow").time.to_s.slice(0,10)+"T"+time
Chronic.parse("tomorrow").time.to_s.slice(0,10)+T+time
Chronic.parse("tomorrow").time.to_s.slice(0,10)+time
Chronic.parse("tomorrow").time.to_s
Chronic.parse("tomorrow").time.strftime
Chronic.parse("tomorrow").time
Chronic.parse("tomorrow")
time=params[:time_due].slice(11,15)
time=params[:time_due].slice(11.15)
params[:time_due].slice(11,15)
params[:time_due].slice(0,4)
params[:time_due]
params[:time_due
params[:time_due].slice(12,15)
params[:time_due]
new_time = params[:time_due].slice(11,15)
new_time.slice(0,5)
new_time.slice(11,15)
new_time
new_time.slice(11,12)
new_time.slice(11,11)
new_time.slice(11,10)
new_time.slice(11,2)
new_time = params[:time_due].slice(11,15)
new_date.time
new_date=Chronic.parse("tomorrow")
new_date=Chronic.parse("tomorrow at #{new_time}")
new_time=params[:time_due].slice(11,21)
params[:time_due]
params[:time_due].slice(11,21)
params[:time_due].slice(11)
params[:time_due].slice(11,11)
params[:time_due].slice(11,12)
params[:time_due].slice(11,13)
params[:time_due].slice(11,14)
params[:time_due].slice(11,15)
params[:time_due].slice(11,16)
params[:time_due].slice(11,17)
params[:time_due].slice(11,18)
params[:time_due].slice(11,19)
params[:time_due].slice(11,20)
params[:time_due].slice(11,21)
params[:time_due].slice(12)
new_arr.splice(1,arr)
new_arr=[4,5,6]
arr=[1,2,3]
params[:time_due]
new_time
params[:time_due]
new_time
continue
params[:due_date].to_datetime
params[:due_date].utc
params[:due_date]
continue
new_chore
continue
Chronic.parse("next #{new_repeat_chore.repeat_every[0]} at #{new_time}")
exit
"next #{new_repeat_chore.repeat_every[0]} at #{new_time}"
new_repeat_chore
Chronic.parse("next #{new_repeat_chore.repeat_every[0]} at #{new_time}")
 Chronic.parse("next #{new_repeat_chore.repeat_every[0]} at #{new_time})
continue
new_time
new_date
continue
participant
continue
participant
x
continue
x
participant
continue
new_chore_array
exit
                    end
                        x++
                        new_chore.save!
                        new_chore.image.attach(new_repeat_chore.image.blob)
                        new_chore.user=participant
                        participant = User.find(new_repeat_chore.participants[x])                        
                                            )
                                            due_date:new_date
                                            point_value:new_repeat_chore.point_value,
                                            description:new_repeat_chore.description,
                                            title:new_repeat_chore.title,
                        new_chore_array[x] = new_repeat_chore.chores.new(
 while x<new_repeat_chore.participants.length
while x<new_repeat_chore.participants.length
exit
Chronic.parse("monday #{new_time}")
new_time
exit
new_date=Chronic.parse("friday #{new_time}")
next_chore_day = day_array.filter{|day|day>current_day}[0]? day_array.filter{|day|day>current_day}[0] : day_array[0]
day_array = ((repeat_chore.repeat_every).map{|day| day.to_i}).sort
current_day = time.wday
chore.due_date.time
chore.due_date
exit
chore
chore.due_date.time
chore.due_date
new_date=Chronic.parse("monday #{new_time}")
 next_chore_day = day_array.filter{|day|day>current_day}[0]? day_array.filter{|day|day>current_day}[0] : day_array[0]
day_array=[7,2]
 next_chore_day = day_array.filter{|day|day>current_day}[0]? day_array.filter{|day|day>current_day}[0] : day_array[0]
day_array=[1,2]
 next_chore_day = day_array.filter{|day|day>current_day}[0]? day_array.filter{|day|day>current_day}[0] : day_array[0]
day_array=[1,3,5]
 next_chore_day = day_array.filter{|day|day>current_day}[0]? day_array.filter{|day|day>current_day}[0] : day_array[0]
day_array=[1]
!repeat_chore.repeat_every.include?("once")
day_aray.filter{|day|day>current_day}
day_array.filter{|day|day>current_day}
day.array.filter{|day|day>current_day}
current_day=time.wday
current_day
day_aray = ((repeat_chore.repeat_every).map{|day| day.to_i}).sort
array.sort
array=[4,2,6,3,6]
repeat.sort
repeat=repeat.map{|day|day.to_i}
repeat=repeat.map{|day|day.to_i|}
repeat
repeat.map{|day|day.to_i}
repeat.to_i
repeat=repeat_chore.repeat_every
3.day
3.wday
time.wday
current_day
repeat_chore.repeat_every
exit
repeat_chore.repeat_every
repeat_chore.repeat_ever
time.wday
time
exit
Chronic.parse("tomorrow #{new_time}")
Chronic.parse("tomorrow 20:00:00")
Chronic.parse(`tomorrow 20:00:00`)
Chronic.parse(`tomorrow #{new_time}`)
new_time = chore.due_date.time.strftime("%H:%M:%S")
chore.due_date.time.strftime("%H:%M:%S")
chore.due_date.time
chore.due_date
time.strftime("%H:%M")
time.strptime("%H:%M")
time.strptime(%H:%M)
time.hour
time.hourminute
time.minute
time.minutes
time.hour.minute
time.wday
time.hour
time = chore.due_date.time
chore.due_date.time.to_time
time.strptime
time=chore.due_date.time.strftime("%H:%M")
chore.due_date.time.strftime("%H:%M")
chore.due_date.time
chore.due_date.time.slice(12,8)
chore.due_date.time
